"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[61112],{3905:(e,n,r)=>{r.d(n,{Zo:()=>h,kt:()=>f});var a=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var s=a.createContext({}),p=function(e){var n=a.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},h=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),d=p(r),f=t,k=d["".concat(s,".").concat(f)]||d[f]||l[f]||i;return r?a.createElement(k,o(o({ref:n},h),{},{components:r})):a.createElement(k,o({ref:n},h))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},83745:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>h});var a=r(87462),t=r(67294),i=r(3905);const o={id:"inferencer",title:"Inferencer"},c=void 0,s={unversionedId:"api-reference/chakra-ui/components/inferencer",id:"api-reference/chakra-ui/components/inferencer",title:"Inferencer",description:"You can automatically generate views for your resources using @pankod/refine-inferencer. Inferencer exports ChakraUIListInferencer, ChakraUIShowInferencer, ChakraUICreateInferencer and ChakraUIEditInferencer components.",source:"@site/docs/api-reference/chakra-ui/components/inferencer.md",sourceDirName:"api-reference/chakra-ui/components",slug:"/api-reference/chakra-ui/components/inferencer",permalink:"/docs/api-reference/chakra-ui/components/inferencer",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/api-reference/chakra-ui/components/inferencer.md",tags:[],version:"current",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1669356966,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{id:"inferencer",title:"Inferencer"},sidebar:"someSidebar",previous:{title:"<AuthPage>",permalink:"/docs/api-reference/chakra-ui/components/chakra-auth-page"},next:{title:"Create",permalink:"/docs/api-reference/chakra-ui/components/basic-views/create"}},p={},h=[{value:"Usage",id:"usage",level:2},{value:"Views",id:"views",level:2},{value:"<code>ChakraUIListInferencer</code>",id:"chakrauilistinferencer",level:3},{value:"<code>ChakraUIShowInferencer</code>",id:"chakrauishowinferencer",level:3},{value:"<code>ChakraUICreateInferencer</code>",id:"chakrauicreateinferencer",level:3},{value:"<code>ChakraUIEditInferencer</code>",id:"chakrauieditinferencer",level:3},{value:"Live StackBlitz Example",id:"live-stackblitz-example",level:2}],l=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",n)},d=l("Tabs"),f=l("TabItem"),k={toc:h};function m(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},k,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can automatically generate views for your resources using ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer"),". Inferencer exports ",(0,i.kt)("inlineCode",{parentName:"p"},"ChakraUIListInferencer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ChakraUIShowInferencer"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ChakraUICreateInferencer")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ChakraUIEditInferencer")," components."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Chakra UI components can be imported from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer/chakra-ui"),". You can directly use the components in ",(0,i.kt)("inlineCode",{parentName:"p"},"resources")," prop of ",(0,i.kt)("inlineCode",{parentName:"p"},"Refine")," component or you can use them in your custom components by passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"resource")," prop as the resource name."),(0,i.kt)(d,{defaultValue:"resources",values:[{label:(0,i.kt)(t.Fragment,null,"In",(0,i.kt)("code",{style:{margin:"0 0.7ch"}},"resources"),"prop"),value:"resources"},{label:"In Custom Components",value:"custom"}],mdxType:"Tabs"},(0,i.kt)(f,{value:"resources",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Layout, ChakraProvider, refineTheme } from "@pankod/refine-chakra-ui";\n// highlight-start\nimport {\n    ChakraUIListInferencer,\n    ChakraUIShowInferencer,\n    ChakraUICreateInferencer,\n    ChakraUIEditInferencer,\n} from "@pankod/refine-inferencer/chakra-ui";\n// highlight-end\n\nconst App = () => {\n    return (\n        <ChakraProvider theme={refineTheme}>\n            <Refine\n                resources={[\n                    {\n                        name: "samples",\n                        // highlight-start\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                        create: ChakraUICreateInferencer,\n                        edit: ChakraUIEditInferencer,\n                        // highlight-end\n                    },\n                ]}\n            />\n        </ChakraProvider>\n    );\n};\n'))),(0,i.kt)(f,{value:"custom",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'// highlight-start\nimport {\n    ChakraUIListInferencer,\n    ChakraUIShowInferencer,\n    ChakraUICreateInferencer,\n    ChakraUIEditInferencer,\n} from "@pankod/refine-inferencer/chakra-ui";\n// highlight-end\n\nconst SampleList = () => {\n    return (\n        // highlight-next-line\n        <ChakraUIListInferencer resource="samples" />\n    );\n};\n\nconst SampleShow = () => {\n    return (\n        // highlight-next-line\n        <ChakraUIShowInferencer resource="samples" />\n    );\n};\n\nconst SampleCreate = () => {\n    return (\n        // highlight-next-line\n        <ChakraUICreateInferencer resource="samples" />\n    );\n};\n\nconst SampleEdit = () => {\n    return (\n        // highlight-next-line\n        <ChakraUIEditInferencer resource="samples" />\n    );\n};\n')))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"To learn more about ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer")," package, please check out ",(0,i.kt)("a",{parentName:"p",href:"/docs/packages/documentation/inferencer"},"Docs"))),(0,i.kt)("h2",{id:"views"},"Views"),(0,i.kt)("h3",{id:"chakrauilistinferencer"},(0,i.kt)("inlineCode",{parentName:"h3"},"ChakraUIListInferencer")),(0,i.kt)("p",null,"Generates a sample list view for your resources according to the API response. It uses ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," component from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-chakra-ui")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"useTable")," hook from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-table"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples"},'setInitialRoutes(["/"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Layout, ChakraProvider, refineTheme } from "@pankod/refine-chakra-ui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    // highlight-start\n    ChakraUIListInferencer,\n    // highlight-end\n    ChakraUIShowInferencer,\n    ChakraUICreateInferencer,\n    ChakraUIEditInferencer,\n} from "@pankod/refine-inferencer/chakra-ui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ChakraProvider theme={refineTheme}>\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        // highlight-start\n                        list: ChakraUIListInferencer,\n                        // highlight-end\n                        show: ChakraUIShowInferencer,\n                        create: ChakraUICreateInferencer,\n                        edit: ChakraUIEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                    },\n                ]}\n            />\n        </ChakraProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,i.kt)("h3",{id:"chakrauishowinferencer"},(0,i.kt)("inlineCode",{parentName:"h3"},"ChakraUIShowInferencer")),(0,i.kt)("p",null,"Generates a sample show view for your resources according to the API response. It uses ",(0,i.kt)("inlineCode",{parentName:"p"},"Show")," and field components from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-chakra-ui")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"useShow")," hook from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/show/123",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/show/123"},'setInitialRoutes(["/samples/show/123"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Layout, ChakraProvider, refineTheme } from "@pankod/refine-chakra-ui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    ChakraUIListInferencer,\n    // highlight-start\n    ChakraUIShowInferencer,\n    // highlight-end\n    ChakraUICreateInferencer,\n    ChakraUIEditInferencer,\n} from "@pankod/refine-inferencer/chakra-ui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ChakraProvider theme={refineTheme}>\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: ChakraUIListInferencer,\n                        // highlight-start\n                        show: ChakraUIShowInferencer,\n                        // highlight-end\n                        create: ChakraUICreateInferencer,\n                        edit: ChakraUIEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                    },\n                ]}\n            />\n        </ChakraProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,i.kt)("h3",{id:"chakrauicreateinferencer"},(0,i.kt)("inlineCode",{parentName:"h3"},"ChakraUICreateInferencer")),(0,i.kt)("p",null,"Generates a sample create view for your resources according to the first record in list API response. It uses ",(0,i.kt)("inlineCode",{parentName:"p"},"Create")," component from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-chakra-ui")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-hook-form"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/create",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/create"},'setInitialRoutes(["/samples/create"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Layout, ChakraProvider, refineTheme } from "@pankod/refine-chakra-ui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    ChakraUIListInferencer,\n    ChakraUIShowInferencer,\n    // highlight-start\n    ChakraUICreateInferencer,\n    // highlight-end\n    ChakraUIEditInferencer,\n} from "@pankod/refine-inferencer/chakra-ui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ChakraProvider theme={refineTheme}>\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                        // highlight-start\n                        create: ChakraUICreateInferencer,\n                        // highlight-end\n                        edit: ChakraUIEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,     \n                    },\n                    {\n                        name: "tags",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                    },\n                ]}\n            />\n        </ChakraProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,i.kt)("h3",{id:"chakrauieditinferencer"},(0,i.kt)("inlineCode",{parentName:"h3"},"ChakraUIEditInferencer")),(0,i.kt)("p",null,"Generates a sample edit view for your resources according to the API response. It uses ",(0,i.kt)("inlineCode",{parentName:"p"},"Edit")," component from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-chakra-ui")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-hook-form"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/edit/123",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/edit/123"},'setInitialRoutes(["/samples/edit/123"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Layout, ChakraProvider, refineTheme } from "@pankod/refine-chakra-ui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    ChakraUIListInferencer,\n    ChakraUIShowInferencer,\n    ChakraUICreateInferencer,\n    // highlight-start\n    ChakraUIEditInferencer,\n    // highlight-end\n} from "@pankod/refine-inferencer/chakra-ui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ChakraProvider theme={refineTheme}>\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer,\n                        create: ChakraUICreateInferencer,\n                        // highlight-start\n                        edit: ChakraUIEditInferencer,\n                        // highlight-end\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer, \n                    },\n                    {\n                        name: "tags",\n                        list: ChakraUIListInferencer,\n                        show: ChakraUIShowInferencer, \n                    },\n                ]}\n            />\n        </ChakraProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,i.kt)("h2",{id:"live-stackblitz-example"},"Live StackBlitz Example"),(0,i.kt)("p",null,"Below you'll find a Live StackBlitz Example displaying a fully setup ",(0,i.kt)("inlineCode",{parentName:"p"},"Refine")," app with ",(0,i.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer/chakra-ui")," components."),(0,i.kt)("iframe",{loading:"lazy",src:"https://stackblitz.com/github/refinedev/refine/tree/master/examples/inferencer/chakra-ui?embed=1&view=preview&theme=dark&preset=node&ctl=1",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"Refine Inferencer with Chakra UI"}))}m.isMDXComponent=!0}}]);