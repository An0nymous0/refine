"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[19664],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>d});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?t.createElement(f,a(a({ref:n},p),{},{components:r})):t.createElement(f,a({ref:n},p))}));function d(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},66357:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(87462),i=r(67294),o=r(3905);const a={id:"inferencer",title:"Inferencer"},s=void 0,l={unversionedId:"api-reference/mui/components/inferencer",id:"api-reference/mui/components/inferencer",title:"Inferencer",description:"You can automatically generate views for your resources using @pankod/refine-inferencer. Inferencer exports MuiListInferencer, MuiShowInferencer, MuiCreateInferencer and MuiEditInferencer components.",source:"@site/docs/api-reference/mui/components/inferencer.md",sourceDirName:"api-reference/mui/components",slug:"/api-reference/mui/components/inferencer",permalink:"/docs/api-reference/mui/components/inferencer",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/api-reference/mui/components/inferencer.md",tags:[],version:"current",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1669356966,formattedLastUpdatedAt:"Nov 25, 2022",frontMatter:{id:"inferencer",title:"Inferencer"},sidebar:"someSidebar",previous:{title:"<AuthPage>",permalink:"/docs/api-reference/mui/components/mui-auth-page"},next:{title:"Create",permalink:"/docs/api-reference/mui/components/basic-views/create"}},c={},p=[{value:"Usage",id:"usage",level:2},{value:"Views",id:"views",level:2},{value:"<code>MuiListInferencer</code>",id:"muilistinferencer",level:3},{value:"<code>MuiShowInferencer</code>",id:"muishowinferencer",level:3},{value:"<code>MuiCreateInferencer</code>",id:"muicreateinferencer",level:3},{value:"<code>MuiEditInferencer</code>",id:"muieditinferencer",level:3},{value:"Live StackBlitz Example",id:"live-stackblitz-example",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},m=u("Tabs"),d=u("TabItem"),f={toc:p};function h(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can automatically generate views for your resources using ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer"),". Inferencer exports ",(0,o.kt)("inlineCode",{parentName:"p"},"MuiListInferencer"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"MuiShowInferencer"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"MuiCreateInferencer")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"MuiEditInferencer")," components."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Material UI components can be imported from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer/mui"),". You can directly use the components in ",(0,o.kt)("inlineCode",{parentName:"p"},"resources")," prop of ",(0,o.kt)("inlineCode",{parentName:"p"},"Refine")," component or you can use them in your custom components by passing the ",(0,o.kt)("inlineCode",{parentName:"p"},"resource")," prop as the resource name."),(0,o.kt)(m,{defaultValue:"resources",values:[{label:(0,o.kt)(i.Fragment,null,"In",(0,o.kt)("code",{style:{margin:"0 0.7ch"}},"resources"),"prop"),value:"resources"},{label:"In Custom Components",value:"custom"}],mdxType:"Tabs"},(0,o.kt)(d,{value:"resources",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n    ThemeProvider,\n    LightTheme,\n    CssBaseline,\n    GlobalStyles,\n} from "@pankod/refine-mui";\n// highlight-start\nimport {\n    MuiListInferencer,\n    MuiShowInferencer,\n    MuiCreateInferencer,\n    MuiEditInferencer,\n} from "@pankod/refine-inferencer/mui";\n// highlight-end\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n            <Refine\n                resources={[\n                    {\n                        name: "samples",\n                        // highlight-start\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                        create: MuiCreateInferencer,\n                        edit: MuiEditInferencer,\n                        // highlight-end\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n};\n'))),(0,o.kt)(d,{value:"custom",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'// highlight-start\nimport {\n    MuiListInferencer,\n    MuiShowInferencer,\n    MuiCreateInferencer,\n    MuiEditInferencer,\n} from "@pankod/refine-inferencer/mui";\n// highlight-end\n\nconst SampleList = () => {\n    return (\n        // highlight-next-line\n        <MuiListInferencer resource="samples" />\n    );\n};\n\nconst SampleShow = () => {\n    return (\n        // highlight-next-line\n        <MuiShowInferencer resource="samples" />\n    );\n};\n\nconst SampleCreate = () => {\n    return (\n        // highlight-next-line\n        <MuiCreateInferencer resource="samples" />\n    );\n};\n\nconst SampleEdit = () => {\n    return (\n        // highlight-next-line\n        <MuiEditInferencer resource="samples" />\n    );\n};\n')))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To learn more about ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer")," package, please check out ",(0,o.kt)("a",{parentName:"p",href:"/docs/packages/documentation/inferencer"},"Docs"))),(0,o.kt)("h2",{id:"views"},"Views"),(0,o.kt)("h3",{id:"muilistinferencer"},(0,o.kt)("inlineCode",{parentName:"h3"},"MuiListInferencer")),(0,o.kt)("p",null,"Generates a sample list view for your resources according to the API response. It uses ",(0,o.kt)("inlineCode",{parentName:"p"},"List")," component and ",(0,o.kt)("inlineCode",{parentName:"p"},"useDatagrid")," hook from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-mui"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/posts",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/posts"},'setInitialRoutes(["/"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport {\n    Layout,\n    ThemeProvider,\n    LightTheme,\n    CssBaseline,\n    GlobalStyles,\n} from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    // highlight-start\n    MuiListInferencer,\n    // highlight-end\n    MuiShowInferencer,\n    MuiCreateInferencer,\n    MuiEditInferencer,\n} from "@pankod/refine-inferencer/mui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        // highlight-start\n                        list: MuiListInferencer,\n                        // highlight-end\n                        show: MuiShowInferencer,\n                        create: MuiCreateInferencer,\n                        edit: MuiEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,o.kt)("h3",{id:"muishowinferencer"},(0,o.kt)("inlineCode",{parentName:"h3"},"MuiShowInferencer")),(0,o.kt)("p",null,"Generates a sample show view for your resources according to the API response. It uses ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," and field components from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-mui")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"useShow")," hook from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-core"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/show/123",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/show/123"},'setInitialRoutes(["/samples/show/123"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport {\n    Layout,\n    ThemeProvider,\n    LightTheme,\n    CssBaseline,\n    GlobalStyles,\n} from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    MuiListInferencer,\n    // highlight-start\n    MuiShowInferencer,\n    // highlight-end\n    MuiCreateInferencer,\n    MuiEditInferencer,\n} from "@pankod/refine-inferencer/mui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: MuiListInferencer,\n                        // highlight-start\n                        show: MuiShowInferencer,\n                        // highlight-end\n                        create: MuiCreateInferencer,\n                        edit: MuiEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,o.kt)("h3",{id:"muicreateinferencer"},(0,o.kt)("inlineCode",{parentName:"h3"},"MuiCreateInferencer")),(0,o.kt)("p",null,"Generates a sample create view for your resources according to the first record in list API response. It uses ",(0,o.kt)("inlineCode",{parentName:"p"},"Create")," component from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-mui")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-hook-form"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/create",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/create"},'setInitialRoutes(["/samples/create"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport {\n    Layout,\n    ThemeProvider,\n    LightTheme,\n    CssBaseline,\n    GlobalStyles,\n} from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    MuiListInferencer,\n    MuiShowInferencer,\n    // highlight-start\n    MuiCreateInferencer,\n    // highlight-end\n    MuiEditInferencer,\n} from "@pankod/refine-inferencer/mui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                        // highlight-start\n                        create: MuiCreateInferencer,\n                        // highlight-end\n                        edit: MuiEditInferencer,\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,o.kt)("h3",{id:"muieditinferencer"},(0,o.kt)("inlineCode",{parentName:"h3"},"MuiEditInferencer")),(0,o.kt)("p",null,"Generates a sample edit view for your resources according to the API response. It uses ",(0,o.kt)("inlineCode",{parentName:"p"},"Edit")," component from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-mui")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"useForm")," hook from ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-react-hook-form"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode previewHeight=600px url=http://localhost:3000/samples/edit/123",live:!0,hideCode:!0,previewHeight:"600px",url:"http://localhost:3000/samples/edit/123"},'setInitialRoutes(["/samples/edit/123"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport {\n    Layout,\n    ThemeProvider,\n    LightTheme,\n    CssBaseline,\n    GlobalStyles,\n} from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n    MuiListInferencer,\n    MuiShowInferencer,\n    MuiCreateInferencer,\n    // highlight-start\n    MuiEditInferencer,\n    // highlight-end\n} from "@pankod/refine-inferencer/mui";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n            <Refine\n                routerProvider={routerProvider}\n                dataProvider={dataProvider(API_URL)}\n                Layout={Layout}\n                resources={[\n                    {\n                        name: "samples",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                        create: MuiCreateInferencer,\n                        // highlight-start\n                        edit: MuiEditInferencer,\n                        // highlight-end\n                        canDelete: true,\n                    },\n                    {\n                        name: "categories",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                    {\n                        name: "tags",\n                        list: MuiListInferencer,\n                        show: MuiShowInferencer,\n                    },\n                ]}\n            />\n        </ThemeProvider>\n    );\n};\n\n// visible-block-end\n\nrender(<App />);\n')),(0,o.kt)("h2",{id:"live-stackblitz-example"},"Live StackBlitz Example"),(0,o.kt)("p",null,"Below you'll find a Live StackBlitz Example displaying a fully setup ",(0,o.kt)("inlineCode",{parentName:"p"},"Refine")," app with ",(0,o.kt)("inlineCode",{parentName:"p"},"@pankod/refine-inferencer/mui")," components."),(0,o.kt)("iframe",{loading:"lazy",src:"https://stackblitz.com/github/refinedev/refine/tree/master/examples/inferencer/mui?embed=1&view=preview&theme=dark&preset=node&ctl=1",style:{width:"100%",height:"80vh",border:"0px",borderRadius:"8px",overflow:"hidden"},title:"Refine Inferencer with Material UI"}))}h.isMDXComponent=!0}}]);